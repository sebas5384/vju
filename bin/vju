#!/bin/bash

if [ -f $SHARE ]; then
  SHARE="../share"
fi

vju_command=$1
vju_command_param=$2
vju_command_param2=$3

vju_help() {
  echo -e "\n>> Examples:"
  echo -e "\n$ vju init \n=> Like 'vagrant init', but with vju's own version of Vagrant file."
  echo -e "\n$ vju up   \n=> Executes 'vagrant up', and it will restart the Juju's agents."
  echo -e "\n$ vju down \n=> Executes 'vagrant suspend'."
  echo -e "\n$ vju in   \n=> Executes 'vagrant ssh'."
  echo -e "\n$ vju deploy cs:~sebas5384/drupal mysite \n=> Will deploy a new Drupal charm with the name mysite."
  echo -e "\n$ vju alias mysite/0 mysite.local \n=> Will add something like '10.0.3.175  mysite.local' at the end of /etc/hosts file."
  echo -e "\n$ vju mount mysite/0:/var/www www \n=> Mount the /var/www from the service machine into the host at ./www"
}

vju_get_container_ip() {
  IFS='/' read -r service unit <<< "$1"
  container_ip=$(vagrant ssh -c 'juju status' | sed '/'"${service}\/${unit}"'/,/public\-address/!d' | sed '/public\-address/!d' | cut -d':' -f2  | tr -d ' ')

  if [[ -z $container_ip ]]; then
    echo -e "\n> Couldn't find the service."
    exit 1
  else
    echo ${container_ip%?}
  fi
}

# Commands.
case $vju_command in
  "" )
    vju_help
    exit 0
  ;;

  "up" )
    vagrant up
    vagrant ssh -c 'sudo restart juju-agent-vagrant-local; sudo restart juju-agent-vagrant-local'
    exit 0
  ;;
  
  "down" )
    vagrant suspend
    exit 0
  ;;

  "in" )
    vagrant ssh
    exit 0
  ;;

  "init" )
    if [ -f ./Vagrantfile ]; then
      echo "> [Warning] You already have a Vagrant file. Nothing happened here."
    else
      install $SHARE/Vagrantfile .

      # Install vagrant-triggers
      if [[ -z `vagrant plugin list | grep "vagrant-triggers"` ]]; then
        vagrant plugin install vagrant-triggers
      fi

      echo "> Yeah! now you are ready to bootup! \"vju up\""
      exit 0
    fi
  ;;

  "alias" )
    if [[ -z $vju_command_param || -z $vju_command_param2 ]]; then
      echo -e "\n> Nope! here's an example:\n$ vju alias demo/0 demo.local"
      exit 1
    fi

    if [ ! -f /etc/hosts ]; then
      echo -e "\n> Where's the /etc/hosts file?\nHey! this only works in GNU/Linux."
      exit 1
    fi

    if [ -z `cat /etc/hosts | grep "\ ${vju_command_param2}$"` ]; then
      echo -e "\n> Getting the service's public address."

      # Get the container IP.
      container_ip=`vju_get_container_ip "$vju_command_param"`

      if [[ -z $container_ip ]]; then
        echo -e "\n> The service $service doesn't exist, or isn't have an IP yet."
        exit 1
      fi

      hosts_line="${container_ip}  $vju_command_param2"
      
      echo -e "\n> \"${hosts_line}\" added into the /etc/hosts file."

      add_command="echo -e '\n${hosts_line}' >> /etc/hosts"
      sudo bash -c "$add_command"
      
      exit 0

    else
      echo -e "\n> The domain ${vju_command_param2} is already in your hosts file.\nRemove it if you want to add a new one."
      exit 1
    fi
  ;;

  # vju mount drupal/0:/var/www drupal-www
  "mount" )
    # Check if the command ssfs is installed.
    if [[ ! $(type sshfs 2>/dev/null) ]]; then
      echo -e "\n> To use this command you must install SSHFS."
    fi

    IFS=':' read -r mount_service mount_service_path <<< "$vju_command_param"

    mount_dest=$vju_command_param2

    if [[ -z $mount_service || -z $mount_service_path || -z $mount_dest ]]; then
      echo -e "\n> Some parameter was missing, seek manual."
      exit 1
    else
      container_ip=`vju_get_container_ip "$mount_service"`

      # Create dir if not exist.
      if [[ ! -d $mount_dest ]]; then
        mkdir $mount_dest
      fi

      sshfs ubuntu@${container_ip}:${mount_service_path} ${mount_dest}
    fi
  ;;

  # Proxy Juju command.
  * )
    vagrant ssh -c "cd /vagrant; juju $*"
  ;;
esac
